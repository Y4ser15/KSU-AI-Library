loadsyntax "ArabicSyntax.ring"
حمل "ArabicFunctions.ring"
حمل "ArabicClasses.ring"
//حمل "AINode.ring"



/*
مشكلة = انشاء مشكلة_رقم


اطبع مشكلة
متابعين = انشاء رصة
كررمن ر = 1 الى طول(مشكلة.توليد(مشكلة.الحالة_البدائية))
القيمة = مشكلة.توليد(مشكلة.الحالة_البدائية)[ر]
متابعين.ادفع(القيمة)
التالي


متابعين.طباعة()
اطبع "=======" + سطر

طالما (متابعين.قيمة(1) != فراغ) مع (متابعين.قيمة(متابعين.الطول()) != مشكلة.الهدف)


اطبع "------------------" + سطر


كررمن ن = 1 الى متابعين.الطول()
اذا (متابعين.قيمة(1) = مشكلة.الهدف)
خروج
نهاية

كررمن ر = 1 الى طول(مشكلة.توليد(متابعين.قيمة(ن)))
القيمة = مشكلة.توليد(متابعين.قيمة(ن))[ر]
متابعين.ادفع(القيمة)
التالي

متابعين.اسحب()

اطبع "==============" + سطر
متابعين.طباعة()
اطبع "==============" + سطر
التالي
نهاية


*/

عنصر مشكلة_رقم

	الحالة_البدائية = 0
	التكلفة = 1
	الدلالة = 0
الهدف = 9

دالة اختبار_الهدف الحالة
اذا الحالة = الهدف
ارجع صح
والا ارجع خطا
نهاية


	دالة توليد حالة
		التابعين = []
		اضافة(التابعين, حالة+1)
		اضافة(التابعين, حالة+2)
		ارجع التابعين
