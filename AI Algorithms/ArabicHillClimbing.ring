loadsyntax "ArabicSyntax.ring"
حمل "ArabicFunctions.ring"
حمل "ArabicClasses.ring"
حمل "AINode.ring"
حمل "Number_problem.ring"

زيارة = 0
توليد = 0

دالة بحث_تسلق_التلة (مشكلة)
	
	الخلية_الحالية = انشاء خلية_الذكاء_الاصطناعي
	افضل_خلية_المجاورة = انشاء خلية_الذكاء_الاصطناعي
	الخلية_الحالية.الحالة = مشكلة.الحالة_البدائية

	طالما(صح)
		زيارة++

		اذا مشكلة.اختبار_الهدف(الخلية_الحالية.الحالة)
			اضافة(الخلية_الحالية.الحل, الخلية_الحالية.الحالة)
			ارجع الخلية_الحالية
		نهاية
		
		الابناء = مشكلة.توليد(الخلية_الحالية.الحالة)
		افضل_خلية_مجاورة = الخلية_الحالية

		كررمن ر=1 الى طول(الابناء)
			توليد++
			خلية = انشاء خلية_الذكاء_الاصطناعي{
				الحالة = الابناء[ر][1]
				الدلالة = الابناء[ر][3]
				الحل = الخلية_الحالية.الحل}

			اضافة(خلية.الحل, الخلية_الحالية.الحالة)

			اذا (افضل_خلية_مجاورة.الدلالة > خلية.الدلالة)
				افضل_خلية_مجاورة = خلية
			نهاية
		التالي

		اذا (الخلية_الحالية.الدلالة <= افضل_خلية_مجاورة.الدلالة)
			اطبع سطر + "(تم الوصول الى حد اقصى محلي)" + سطر
			ارجع الخلية_الحالية
		نهاية

		الخلية_الحالية = افضل_خلية_مجاورة

	نهاية

دالة طباعة_بحث_تسلق_التلة مشكلة


	وقت_البداية = مؤقت()
	حل_المشكلة = بحث_تسلق_التلة(مشكلة)
	اطبع "طريق حل المشكلة باستخدام بحث_تسلق_التلة هو: "
	وقت_البحث = (مؤقت() - وقت_البداية) / دقات_بالثانية()

	كررمن ر = 1 الى طول(حل_المشكلة.الحل)
		اطبع حل_المشكلة.الحل[ر]

		اذا ر != طول(حل_المشكلة.الحل)
			اطبع "-->"
		نهاية
	التالي

	اطبع سطر + "تمت زيارة: " + زيارة + " خلية" + سطر
	اطبع "تم توليد: " + توليد + " خلية" + سطر
	اطبع "خلال: " +  وقت_البحث +" ثانية" + سطر

	زيارة = 0
	توليد = 0
	مشكلة.البعد = 0



